*&---------------------------------------------------------------------*
*&  Include           ZRBIG20_56F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  SET_INIT_VALUE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_init_value .
  p_carrid =  'LH'.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_FLIGHT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_flight_data .

  DATA : lv_var(20).

  FIELD-SYMBOLS : <lfs_it> TYPE STANDARD TABLE.

  CLEAR : gs_body.
  LOOP AT gt_body INTO gs_body.

    CLEAR : lv_var.
    CONCATENATE 'gt_' gs_body-d1 INTO lv_var.
    ASSIGN (lv_var) TO <lfs_it>.

    CLEAR : lv_var.
    lv_var = gs_body-d1.

    CLEAR : <lfs_it>.
    SELECT *
      INTO CORRESPONDING FIELDS OF TABLE <lfs_it>
      FROM (lv_var)
      WHERE carrid EQ p_carrid.

  ENDLOOP.

*-- Get SCARR data
  CLEAR : gs_scarr.
  SELECT SINGLE *
    INTO CORRESPONDING FIELDS OF gs_scarr
    FROM scarr
    WHERE carrid EQ p_carrid.
*
**-- Get SPFLI data
*  CLEAR : gt_spfli.
*  SELECT *
*    INTO CORRESPONDING FIELDS OF TABLE gt_spfli
*    FROM spfli
*    WHERE carrid EQ p_carrid.
*
**-- Get SFLIGHT data
*  CLEAR : gt_sflight.
*  SELECT *
*    INTO CORRESPONDING FIELDS OF TABLE gt_sflight
*    FROM sflight
*    WHERE carrid EQ p_carrid.
*
**-- Get SBOOK data
*  CLEAR : gt_sbook.
*  SELECT *
*    INTO CORRESPONDING FIELDS OF TABLE gt_sbook
*    FROM sbook
*    WHERE carrid EQ p_carrid.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_SPFLI_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_spfli_data .

  PERFORM set_layo.

  IF go_spfli_cont IS INITIAL.

    PERFORM create_spfli_obj.

    CALL METHOD go_spfli_grid->set_table_for_first_display
      EXPORTING
        i_structure_name              = 'SPFLI'
        i_save                        = 'A'
        i_default                     = 'X'
        is_layout                     = gs_layo
      CHANGING
        it_outtab                     = gt_spfli
      EXCEPTIONS
        invalid_parameter_combination = 1
        program_error                 = 2
        too_many_lines                = 3
        OTHERS                        = 4.

  ELSE.
    CALL METHOD go_spfli_grid->refresh_table_display.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_SPFLI_OBJ
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_spfli_obj .

*-- Docking container로 하면 data 출력이 안됨
  CREATE OBJECT go_spfli_cont
    EXPORTING
      container_name = 'SPFLI_CONT'.

  CREATE OBJECT go_spfli_grid
    EXPORTING
      i_parent = go_spfli_cont.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_SFLIGHT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_sflight_data .

  PERFORM set_layo.

  IF go_sflight_cont IS INITIAL.

    PERFORM create_sflight_obj.

    CALL METHOD go_sflight_grid->set_table_for_first_display
      EXPORTING
        i_structure_name              = 'SFLIGHT'
        i_save                        = 'A'
        i_default                     = 'X'
        is_layout                     = gs_layo
      CHANGING
        it_outtab                     = gt_sflight
      EXCEPTIONS
        invalid_parameter_combination = 1
        program_error                 = 2
        too_many_lines                = 3
        OTHERS                        = 4.
  ELSE.
    CALL METHOD go_sflight_grid->refresh_table_display.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_LAYO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_layo .

  CLEAR : gs_layo.
  gs_layo-zebra       = 'X'.
  gs_layo-sel_mode    = 'D'.
  gs_layo-cwidth_opt  = 'X'.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_SFLIGHT_OBJ
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_sflight_obj .

  CREATE OBJECT go_sflight_cont
    EXPORTING
      container_name = 'SFLIGHT_CONT'.

  CREATE OBJECT go_sflight_grid
    EXPORTING
      i_parent = go_sflight_cont.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_SBOOK_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_sbook_data .

  PERFORM set_layo.

  IF go_sbook_cont IS INITIAL.

    PERFORM create_sbook_obj.

    CALL METHOD go_sbook_grid->set_table_for_first_display
      EXPORTING
        i_structure_name              = 'SBOOK'
        i_save                        = 'A'
        i_default                     = 'X'
        is_layout                     = gs_layo
      CHANGING
        it_outtab                     = gt_sbook
      EXCEPTIONS
        invalid_parameter_combination = 1
        program_error                 = 2
        too_many_lines                = 3
        OTHERS                        = 4.

  ELSE.
    CALL METHOD go_sbook_grid->refresh_table_display.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_SBOOK_OBJ
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_sbook_obj .

  CREATE OBJECT go_sbook_cont
    EXPORTING
      container_name = 'SBOOK_CONT'.

  CREATE OBJECT go_sbook_grid
    EXPORTING
      i_parent = go_sbook_cont.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FREE_SPFLI_OBJ
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM free_spfli_obj .

  CALL METHOD : go_spfli_grid->free,
                go_spfli_cont->free.
  FREE : go_spfli_cont, go_spfli_grid.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FREE_SFLIGHT_OBJ
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM free_sflight_obj .

  CALL METHOD : go_sflight_grid->free,
              go_sflight_cont->free.
  FREE :  go_sflight_grid, go_sflight_cont.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FREE_SBOOK_OBJ
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM free_sbook_obj .

  CALL METHOD : go_sbook_grid->free,
                go_sbook_cont->free.

  FREE : go_sbook_cont, go_sbook_grid.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_LOOP_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_loop_data .

  CLEAR : gt_body.


  gs_body-d1  = 'SPFLI'.
  APPEND gs_body TO gt_body.
  CLEAR  gs_body.

  gs_body-d1  = 'SFLIGHT'.
  APPEND gs_body TO gt_body.
  CLEAR  gs_body.

  gs_body-d1  = 'SBOOK'.
  APPEND gs_body TO gt_body.
  CLEAR  gs_body.

ENDFORM.

----------------------------------------------------------------------------------
Extracted by Direct Download Enterprise version 1.3.1 - E.G.Mellodew. 1998-2005 UK. Sap Release 750
