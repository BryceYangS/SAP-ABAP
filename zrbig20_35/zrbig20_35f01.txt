*&---------------------------------------------------------------------*
*&  Include           ZRBIG20_35F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  SET_INIT_VALUE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_init_value .

  p_bukrs = '1000'.
  p_gjahr = sy-datum(4).

  s_blart-sign    = 'I'.
  s_blart-option  = 'EQ'.
  s_blart-low     = 'RV'.
  APPEND s_blart.
  CLEAR  s_blart.

  s_blart-sign    = 'I'.
  s_blart-option  = 'EQ'.
  s_blart-low     = 'DZ'.
  APPEND s_blart.
  CLEAR  s_blart.

  s_monat-sign    = 'I'.
  s_monat-option  = 'BT'.
  s_monat-low     = '6'.
  s_monat-high    = sy-datum+4(2).
  APPEND s_monat.
  CLEAR  s_monat.

  s_budat-sign    = 'I'.
  s_budat-option  = 'BT'.
  s_budat-low     = '20180601'.
  s_budat-high    = sy-datum.
  APPEND s_budat.
  CLEAR  s_budat.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_BODY_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_body_data .
  DATA : lt_body LIKE gt_body.

  CLEAR : gt_body.

  SELECT a~gjahr a~belnr a~xblnr bschl kunnr dmbtr a~waers
    INTO CORRESPONDING FIELDS OF TABLE gt_body
    FROM bkpf AS a INNER JOIN bsid AS b
    ON   a~belnr  EQ b~belnr
    AND  a~gjahr  EQ b~gjahr
    AND  a~bukrs  EQ b~bukrs
    WHERE a~bukrs EQ p_bukrs
    AND   a~gjahr EQ p_gjahr
    AND   a~blart   IN s_blart
    AND   a~monat   IN s_monat
    AND   a~budat   IN s_budat.

*         name1  TYPE kna1-name1,

**********************************************************************
* For all entried In
**********************************************************************
*-- 1st. itab => empty check
  IF gt_body IS NOT INITIAL.

    "Copy itab
    lt_body = gt_body.

*-- 2nd. Sort
    SORT lt_body  BY kunnr  ASCENDING.

*-- 3rd. Duplicate Delete
    DELETE ADJACENT DUPLICATES FROM lt_body COMPARING kunnr.

    CLEAR : gt_kna1.
    SELECT *
      INTO CORRESPONDING FIELDS OF TABLE gt_kna1
      FROM kna1 FOR ALL ENTRIES IN lt_body
      WHERE kunnr EQ lt_body-kunnr.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ADD_TEXT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM add_text_data .
  DATA : lv_tabix TYPE sy-tabix.


  SORT gt_kna1 BY kunnr ASCENDING.

  CLEAR : gs_body.
  LOOP AT gt_body INTO gs_body.

    lv_tabix = sy-tabix.

    CLEAR : gs_kna1.
    READ TABLE gt_kna1 INTO gs_kna1 WITH KEY kunnr  = gs_body-kunnr
     BINARY SEARCH.

    gs_body-name1  = gs_kna1-name1.

    MODIFY gt_body FROM gs_body INDEX lv_tabix TRANSPORTING name1.

  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_SCREEN
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_screen .

  PERFORM set_layo_sort.

  CLEAR : gs_fcat, gt_fcat.
  PERFORM set_field_catalog USING :
        "pk     "fieldName        "Col text               "emphasize
        'X'      'GJAHR'          'Fiscal year'           ' ',
        'X'      'BELNR'          'Document no'           ' ',
        ' '      'XBLNR'          'Ref doc.No'            ' ',
        ' '      'BSCHL'          'Posting key'           ' ',
        ' '      'KUNNR'          'Customer'              'X',
        ' '      'NAME1'          'Name'                  ' ',
        ' '      'DMBTR'          'Amount'                ' ',
        ' '      'WAERS'          'Currency'              ' '.

  IF go_container IS INITIAL.
    PERFORM create_obj.

    SET HANDLER : lcl_event_handler=>on_hotspot_click FOR go_alv_grid,
                  lcl_event_handler=>on_double_click  FOR go_alv_grid.

    CALL METHOD go_alv_grid->set_table_for_first_display
      EXPORTING
        i_save                        = 'A'
        i_default                     = 'X'
        is_layout                     = gs_layout
      CHANGING
        it_outtab                     = gt_body
        it_fieldcatalog               = gt_fcat
        it_sort                       = gt_sort
      EXCEPTIONS
        invalid_parameter_combination = 1
        program_error                 = 2
        too_many_lines                = 3
        OTHERS                        = 4.

  ELSE.
    CALL METHOD go_alv_grid->refresh_table_display.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_LAYO_SORT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_layo_sort .

*-- Set layout
  CLEAR : gs_layout.
  gs_layout-zebra       = 'X'.
  gs_layout-sel_mode    = 'D'.
  gs_layout-cwidth_opt  = 'X'.
  gs_layout-totals_bef  = 'X'.

*-- Set sort
  CLEAR : gs_sort, gt_sort.
  gs_sort-fieldname       =  'KUNNR'.
  gs_sort-spos            = 1.
  gs_sort-up              = 'X'.
  gs_sort-subtot          = 'X'.
  APPEND gs_sort TO gt_sort.
  CLEAR  gs_sort.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FIELD_CATALOG
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0229   text
*      -->P_0230   text
*      -->P_0231   text
*      -->P_0232   text
*----------------------------------------------------------------------*
FORM set_field_catalog  USING pv_key pv_fname pv_coltext pv_emphasize.

  gs_fcat-key         = pv_key.
  gs_fcat-fieldname   = pv_fname.
  gs_fcat-coltext     = pv_coltext.
  gs_fcat-emphasize   = pv_emphasize.

  CASE pv_fname.
    WHEN 'DMBTR'.
      gs_fcat-cfieldname    = 'WAERS'.
      gs_fcat-do_sum        = 'X'.
    WHEN 'BELNR'.
      gs_fcat-hotspot       = 'X'.
  ENDCASE.

  APPEND gs_fcat TO  gt_fcat.
  CLEAR  gs_fcat.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_OBJ
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_obj .

  CREATE OBJECT go_container
    EXPORTING
      repid     = sy-repid
      dynnr     = sy-dynnr
      side      = go_container->dock_at_left
      extension = 3000.

  CREATE OBJECT go_alv_grid
    EXPORTING
      i_parent = go_container.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ON_DOUBLE_CLICK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_E_ROW  text
*----------------------------------------------------------------------*
FORM on_double_click  USING    pv_row.

  DATA : lv_htype TYPE dd01v-datatype.

  CALL FUNCTION 'NUMERIC_CHECK'
    EXPORTING
      string_in = pv_row
    IMPORTING
      htype     = lv_htype.

  IF lv_htype EQ 'CHAR'.
    EXIT.
  ENDIF.

  CLEAR : gs_body.
  READ TABLE gt_body INTO gs_body INDEX pv_row.

  CLEAR : gs_bseg, gt_bseg.
  SELECT *
    INTO CORRESPONDING FIELDS OF TABLE gt_bseg
    FROM bseg
    WHERE bukrs EQ p_bukrs
    AND   belnr EQ gs_body-belnr
    AND   gjahr EQ gs_body-gjahr.

  IF sy-dbcnt GT 0.
    CALL SCREEN 110 STARTING AT 04 04.
  ELSE.
    MESSAGE s037  DISPLAY LIKE 'E'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_POP
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_pop .

  PERFORM set_pop_layo_sort.

  CLEAR : gs_pop_fcat, gt_pop_fcat.
  PERFORM set_pop_fcat USING :
        "pk     "FieldName      "Col text             "emphasize
        'X'     'BUKRS'          'Company'             ' ',
        'X'     'BELNR'          'Documnet no'         ' ',
        ' '     'BUZEI'          'Item no'             ' ',
        ' '     'BUZID'          'Item'                ' ',
        ' '     'GSBER'          'Business area'       'X',
        ' '     'BSCHL'          'Posting key'         ' ',
        ' '     'DMBTR'          'Amount'              ' ',
        ' '     'PSWSL'          'Currency'            ' '.

  IF go_pop_con IS INITIAL.
    PERFORM create_pop_obj.

    CALL METHOD go_pop_grid->set_table_for_first_display
      EXPORTING
        i_save                        = 'A'
        i_default                     = 'X'
        is_layout                     = gs_pop_layo
      CHANGING
        it_outtab                     = gt_bseg
        it_fieldcatalog               = gt_pop_fcat
        it_sort                       = gt_pop_sort
      EXCEPTIONS
        invalid_parameter_combination = 1
        program_error                 = 2
        too_many_lines                = 3
        OTHERS                        = 4.

  ELSE.
    CALL METHOD go_pop_grid->refresh_table_display.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_POP_LAYO_SORT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_pop_layo_sort .
*-- layout
  CLEAR : gs_pop_layo.
  gs_pop_layo-zebra     = 'X'.
  gs_pop_layo-sel_mode  = 'D'.
  gs_pop_layo-cwidth_opt  = 'X'.
  gs_pop_layo-no_toolbar  = 'X'.

*-- sort
  CLEAR : gs_pop_sort, gt_pop_sort.
  gs_pop_sort-fieldname = 'BUZEI'.
  gs_pop_sort-spos      = 1.
  gs_pop_sort-down      = 'X'.
  APPEND gs_pop_sort TO gt_pop_sort.
  CLEAR  gs_pop_sort.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_POP_FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0516   text
*      -->P_0517   text
*      -->P_0518   text
*      -->P_0519   text
*----------------------------------------------------------------------*
FORM set_pop_fcat  USING pv_key pv_fname pv_coltext pv_emphasize.

  gs_pop_fcat-key       = pv_key.
  gs_pop_fcat-fieldname = pv_fname.
  gs_pop_fcat-coltext   = pv_coltext.
  gs_pop_fcat-emphasize = pv_emphasize.

  CASE pv_fname.
    WHEN 'DMBTR'.
      gs_pop_fcat-cfieldname  = 'PSWSL'.
      gs_pop_fcat-do_sum      = 'X'.
  ENDCASE.

  APPEND gs_pop_fcat TO gt_pop_fcat.
  CLEAR  gs_pop_fcat.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_POP_OBJ
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_pop_obj .

  CREATE OBJECT go_pop_con
    EXPORTING
      container_name = 'GO_CONT'.

  CREATE OBJECT go_pop_grid
    EXPORTING
      i_parent = go_pop_con.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ON_HOTSPOT_CLICK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_E_ROW_ID  text
*----------------------------------------------------------------------*
FORM on_hotspot_click  USING    p_e_row_id.

  DATA : lv_htype TYPE dd01v-datatype.

  CALL FUNCTION 'NUMERIC_CHECK'
    EXPORTING
      string_in = p_e_row_id
    IMPORTING
      htype     = lv_htype.

  IF lv_htype NE 'NUMC'.
    EXIT.
  ENDIF.

  CLEAR : gs_body.
  READ TABLE gt_body INTO gs_body INDEX p_e_row_id.

  SET PARAMETER ID 'BLN' FIELD gs_body-belnr.
  SET PARAMETER ID 'BUK' FIELD p_bukrs.
  SET PARAMETER ID 'GJR' FIELD gs_body-gjahr.

  CALL TRANSACTION 'FB03' AND SKIP FIRST SCREEN.

ENDFORM.

----------------------------------------------------------------------------------
Extracted by Direct Download Enterprise version 1.3.1 - E.G.Mellodew. 1998-2005 UK. Sap Release 750
