*&---------------------------------------------------------------------*
*&  Include           ZRBIG20_65F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  SET_INIT_VALUE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_init_value .

  s_erdat-sign   = 'I'.
  s_erdat-option = 'BT'.
  s_erdat-low    = '20180701'.
  s_erdat-high   = sy-datum.
  APPEND s_erdat.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_data .

  DATA : lt_vbak LIKE gt_vbak.

  CLEAR : gt_vbak.
  SELECT *
    INTO CORRESPONDING FIELDS OF TABLE gt_vbak
    FROM vbak
    WHERE erdat IN s_erdat.

  IF gt_vbak IS INITIAL.
    MESSAGE s037(k5) DISPLAY LIKE 'E'.
    STOP.
  ENDIF.

  CLEAR : lt_vbak.
  lt_vbak = gt_vbak.

  SORT lt_vbak BY kunnr.
  DELETE ADJACENT DUPLICATES FROM lt_vbak COMPARING kunnr.

  CLEAR : gt_kna1.
  SELECT *
    INTO CORRESPONDING FIELDS OF TABLE gt_kna1
    FROM kna1
    FOR ALL ENTRIES IN lt_vbak
    WHERE kunnr EQ lt_vbak-kunnr.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  MAKE_DISPLAY_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM make_display_data .

  SORT gt_kna1 BY kunnr.

  CLEAR : gs_vbak.
  LOOP AT gt_vbak INTO gs_vbak.

    CLEAR : gs_body.
    MOVE-CORRESPONDING gs_vbak TO gs_body.

    CLEAR : gs_kna1.
    READ TABLE gt_kna1 INTO gs_kna1 WITH KEY kunnr = gs_body-kunnr
                                    BINARY SEARCH.
    gs_body-name1 = gs_kna1-name1.

    APPEND gs_body TO gt_body.

  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_SCREEN_100
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_screen_100 .

  PERFORM set_layo_sort.

  CLEAR : gt_fcat, gs_fcat.
  PERFORM set_fcat USING :
        "pk "FieldName    "Coltext      "Emphasize
        'X'   'VBELN'     'SD Document'      ' ',
        ' '   'AUART'     'Document type'    ' ',
        ' '   'KUNNR'     'Customer'         ' ',
        ' '   'NAME1'     'Name'             'X',
        ' '   'NETWR'     'Amount'           ' ',
        ' '   'WAERK'     'Currency'         ' '.

  IF go_container IS INITIAL .

    PERFORM create_obj.

    SET HANDLER : lcl_event_handler=>double_click FOR go_alv_grid.

    CALL METHOD go_alv_grid->set_table_for_first_display
      EXPORTING
        i_save                        = 'A'
        i_default                     = 'X'
        is_layout                     = gs_layo
      CHANGING
        it_outtab                     = gt_body
        it_fieldcatalog               = gt_fcat
        it_sort                       = gt_sort
      EXCEPTIONS
        invalid_parameter_combination = 1
        program_error                 = 2
        too_many_lines                = 3
        OTHERS                        = 4.

  ELSE.
    CALL METHOD go_alv_grid->refresh_table_display.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_LAYO_SORT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_layo_sort .

  CLEAR : gs_layo.
  gs_layo-zebra       = 'X'.
  gs_layo-sel_mode    = 'D'.
  gs_layo-cwidth_opt  = 'X'.
  gs_layo-totals_bef  = 'X'.


  CLEAR : gs_sort.
  gs_sort-fieldname = 'AUART'.
  gs_sort-subtot    = 'X'.
  APPEND gs_sort TO gt_sort.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_OBJ
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_obj .

  CREATE OBJECT go_container
    EXPORTING
      repid     = sy-repid
      dynnr     = sy-dynnr
      side      = go_container->dock_at_left
      extension = 3000.

  CREATE OBJECT go_alv_grid
    EXPORTING
      i_parent = go_container.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0144   text
*      -->P_0145   text
*      -->P_0146   text
*      -->P_0147   text
*----------------------------------------------------------------------*
FORM set_fcat  USING  pv_k pv_f pv_c pv_e.

  CLEAR : gs_fcat.
  gs_fcat-key       = pv_k.
  gs_fcat-fieldname = pv_f.
  gs_fcat-coltext   = pv_c.
  gs_fcat-emphasize = pv_e.

  CASE pv_f.
    WHEN 'NETWR'.
      gs_fcat-cfieldname = 'WAERK'.
      gs_fcat-do_sum     = 'X'.
  ENDCASE.

  APPEND gs_fcat TO gt_fcat.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SAVE_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM save_data .
  DATA : ls_save   TYPE ztbig20_24,
         lt_save   LIKE TABLE OF ls_save,
         ls_check  TYPE ztbig20_24,
         ls_vbap   TYPE vbap,
         lv_answer.

  CALL FUNCTION 'POPUP_TO_CONFIRM'
    EXPORTING
      titlebar              = 'SAVE DATA'
      text_question         = 'Do you wanna save the data?'
      text_button_1         = 'Ja'(001)
      text_button_2         = 'Nein'(002)
      display_cancel_button = 'X'
    IMPORTING
      answer                = lv_answer.

  IF lv_answer NE 1.
    EXIT.
  ENDIF.

  CLEAR : lt_save, ls_save, gs_body.
  LOOP AT gt_body INTO gs_body.

    CLEAR : ls_save.
    MOVE-CORRESPONDING gs_body TO ls_save.

    CLEAR : ls_check.
    SELECT SINGLE *
      INTO CORRESPONDING FIELDS OF ls_check
      FROM ztbig20_24
      WHERE vbeln EQ ls_save-vbeln.

    CLEAR : ls_vbap.
      SELECT SINGLE *
        INTO CORRESPONDING FIELDS OF ls_vbap
        FROM vbap
        WHERE vbeln EQ ls_save-vbeln.
    ls_save-posnr = ls_vbap-posnr.
    ls_save-matkl = ls_vbap-matkl.

    IF sy-dbcnt GT 0.
      ls_save-erdat   = ls_check-erdat.
      ls_save-ernam   = ls_check-ernam.
      ls_save-erzet   = ls_check-erzet.
      ls_save-aedat   = sy-datum.
      ls_save-aenam   = sy-uname.
      ls_save-aezet   = sy-uzeit.
    ELSE.
      ls_save-erdat   = sy-datum.
      ls_save-ernam   = sy-uname.
      ls_save-erzet   = sy-uzeit.
    ENDIF.

    APPEND ls_save TO lt_save.

  ENDLOOP.

  MODIFY ztbig20_24 FROM TABLE lt_save.

  IF sy-subrc EQ 0.
    COMMIT WORK.
    MESSAGE s102(k5).
  ELSE.
    ROLLBACK WORK.
    MESSAGE s001(k5) WITH 'Save error' DISPLAY LIKE 'E'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DOUBLE_CLICK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_E_ROW  text
*----------------------------------------------------------------------*
FORM double_click  USING    pv_row.

  DATA : lv_htype TYPE dd01v-datatype.

  CALL FUNCTION 'NUMERIC_CHECK'
    EXPORTING
      string_in = pv_row
    IMPORTING
      htype     = lv_htype.

  IF lv_htype EQ 'CHAR'.
    EXIT.
  ENDIF.

  CLEAR : gs_body.
  READ TABLE gt_body INTO gs_body INDEX pv_row.

  CLEAR : gt_vbap.
  CALL FUNCTION 'ZFM_DOC_DETAIL_20_12'
    EXPORTING
      i_vbeln = gs_body-vbeln
    TABLES
      t_vbap  = gt_vbap.

  IF gt_vbap IS INITIAL.
    MESSAGE s037(k5) DISPLAY LIKE 'E'.
    EXIT.
  ELSE.
    PERFORM make_display_pop_data.

    CALL SCREEN 110 STARTING AT 03 03.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  MAKE_DISPLAY_POP_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM make_display_pop_data .

  DATA : lt_vbap LIKE gt_vbap.

  CLEAR : lt_vbap.
  lt_vbap = gt_vbap.

  SORT lt_vbap BY matkl.
  DELETE ADJACENT DUPLICATES FROM lt_vbap COMPARING matkl.

  CLEAR : gt_t023t.
  SELECT *
    INTO CORRESPONDING FIELDS OF TABLE gt_t023t
    FROM t023t
    FOR ALL ENTRIES IN lt_vbap
    WHERE matkl EQ lt_vbap-matkl
    AND   spras EQ sy-langu.

  SORT gt_t023t BY matkl.

  CLEAR : gt_pop_body, gs_pop_body, gs_vbap.
  LOOP AT gt_vbap INTO gs_vbap.

    CLEAR : gs_pop_body.
    MOVE-CORRESPONDING gs_vbap TO gs_pop_body.

    CLEAR : gs_t023t.
    READ TABLE gt_t023t INTO gs_t023t WITH KEY matkl = gs_pop_body-matkl
                         BINARY SEARCH.
    gs_pop_body-wgbez = gs_t023t-wgbez.

    APPEND gs_pop_body TO gt_pop_body.

  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_SCREEN_110
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_screen_110 .

  PERFORM set_pop_layo.

  CLEAR : gs_pop_fcat, gt_pop_fcat.
  PERFORM set_pop_fcat USING :
        "pk "FieldName    "ColText          "Emphasize
        'X'   'VBELN'      'SD Document'    ' ',
        'X'   'POSNR'      'Item No'        ' ',
        ' '   'MATKL'      'Material Group' ' ',
        ' '   'WGBEZ'      'Description'    'X',
        ' '   'NETWR'      'Amount'         ' ',
        ' '   'WAERK'      'Currency'       ' '.

  IF go_pop_con IS INITIAL .


    PERFORM create_pop_obj.

    CALL METHOD go_pop_grid->set_table_for_first_display
      EXPORTING
        i_save                        = 'A'
        i_default                     = 'X'
        is_layout                     = gs_pop_layo
      CHANGING
        it_outtab                     = gt_pop_body
        it_fieldcatalog               = gt_pop_fcat
*       it_sort                       =
*       it_filter                     =
      EXCEPTIONS
        invalid_parameter_combination = 1
        program_error                 = 2
        too_many_lines                = 3
        OTHERS                        = 4.

  ELSE.
    CALL METHOD go_pop_grid->refresh_table_display.
  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_POP_LAYO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_pop_layo .

  CLEAR : gs_pop_layo.
  gs_pop_layo-zebra       = 'X'.
  gs_pop_layo-sel_mode    = 'D'.
  gs_pop_layo-cwidth_opt  = 'X'.
  gs_pop_layo-totals_bef  = 'X'.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_POP_FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0635   text
*      -->P_0636   text
*      -->P_0637   text
*      -->P_0638   text
*----------------------------------------------------------------------*
FORM set_pop_fcat  USING pv_k pv_f pv_c pv_e.

  CLEAR : gs_pop_fcat.
  gs_pop_fcat-key       = pv_k.
  gs_pop_fcat-fieldname = pv_f.
  gs_pop_fcat-coltext   = pv_c.
  gs_pop_fcat-emphasize = pv_e.

  CASE pv_f.
    WHEN 'NETWR'.
      gs_pop_fcat-cfieldname = 'WAERK'.
      gs_pop_fcat-do_sum     = 'X'.
  ENDCASE.

  APPEND gs_pop_fcat TO gt_pop_fcat.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_POP_OBJ
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_pop_obj .

  CREATE OBJECT go_pop_con
    EXPORTING
      container_name = 'GO_CONT'.

  CREATE OBJECT go_pop_grid
    EXPORTING
      i_parent = go_pop_con.

ENDFORM.

----------------------------------------------------------------------------------
Extracted by Direct Download Enterprise version 1.3.1 - E.G.Mellodew. 1998-2005 UK. Sap Release 750
