*&---------------------------------------------------------------------*
*&  Include           ZRBIG20_30F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  SET_INIT_VALUE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_init_value .
  p_mjahr = '2018'.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_data .

*-- Create internal table to Copy orignal internal table
  DATA : lt_body LIKE gt_body.

*-- Insert data into internal table
  CLEAR : gt_body, gs_body.
  SELECT a~mjahr a~mblnr  a~awsys b~matnr b~werks b~dmbtr b~waers
    INTO CORRESPONDING FIELDS OF TABLE gt_body
    FROM mkpf AS a INNER JOIN mseg AS b
    ON    a~mjahr EQ b~mjahr
    AND   a~mblnr EQ b~mblnr
    WHERE a~mjahr EQ p_mjahr.

*-- For all entries in
  " 1. No data? Yes data?
  IF gt_body IS NOT INITIAL.

    "Copy data from orginal internal table
    lt_body = gt_body.

    " 2. Sort internal table by key
    SORT lt_body BY werks ASCENDING.

    " 3. Delete duplicate data
    DELETE ADJACENT DUPLICATES FROM lt_body COMPARING werks.

    " AND Now!! For all entries in START!!
    " Get data From t001w
    CLEAR : gs_t001w, gt_t001w.
    SELECT *
      INTO CORRESPONDING FIELDS OF TABLE gt_t001w
      FROM t001w
      FOR ALL ENTRIES IN lt_body
      WHERE werks EQ lt_body-werks.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ADD_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM add_data .

*-- Table Index for Looping internal table
  DATA : lv_tabix TYPE sy-tabix.

*-- Sort to use binary search
  SORT gt_t001w BY werks ASCENDING.

  LOOP AT gt_body INTO gs_body.

    lv_tabix =  sy-tabix.

*-- Add text data
    CLEAR : gs_t001w.
    READ TABLE gt_t001w INTO gs_t001w WITH KEY werks  = gs_body-werks
                                      BINARY SEARCH.
    gs_body-name1 = gs_t001w-name1.

*-- Add icon & color data
    IF gs_body-matnr EQ '100-100'.
      gs_body-icon  = icon_message_information.
      gs_body-col   = 'C301'.
    ENDIF.

    MODIFY gt_body FROM gs_body INDEX lv_tabix TRANSPORTING name1 icon col.

  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  EXIT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM exit .
  CASE gv_okcode.
    WHEN 'BACK' OR 'EXIT' OR 'CANC'.
      CALL METHOD : go_alv_grid->free,
                    go_container->free.

      FREE : go_alv_grid, go_container.

      LEAVE TO SCREEN 0.
  ENDCASE.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_SCREEN
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_screen .

*-- Set layout
  PERFORM set_layout.

*-- Set Sort
  PERFORM set_sort.

  CLEAR : gs_fcat, gt_fcat.
  PERFORM set_field_catalog USING :
        "pk "Field name       "col text               "emphasize
        'X' 'ICON'            'Icon'                  ' ',
        'X' 'MJAHR'           'Document year'         ' ',
        'X' 'MBLNR'           'Material doc'          ' ',
        ' ' 'AWSYS'           'Logical System'        ' ',
        ' ' 'MATNR'           'Material No'           ' ',
        ' ' 'WERKS'           'Plant'                 ' ',
        ' ' 'NAME1'           'Plant name'            'X',
        ' ' 'DMBTR'           'Amount'                ' ',
        ' ' 'WAERS'           'Currency'              ' '.

  IF go_container IS INITIAL.
    PERFORM create_obj.

    SET HANDLER : lcl_event_handler=>on_double_click FOR go_alv_grid,
                  lcl_event_handler=>on_hotspot FOR go_alv_grid.

    CALL METHOD go_alv_grid->set_table_for_first_display
      EXPORTING
        i_save                        = 'A'
        i_default                     = 'X'
        is_layout                     = gs_layout
      CHANGING
        it_outtab                     = gt_body
        it_fieldcatalog               = gt_fcat
        it_sort                       = gt_sort
      EXCEPTIONS
        invalid_parameter_combination = 1
        program_error                 = 2
        too_many_lines                = 3
        OTHERS                        = 4.

  ELSE.
    CALL METHOD go_alv_grid->refresh_table_display.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_LAYOUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_layout .

  CLEAR : gs_layout.
  gs_layout-zebra       = 'X'.
  gs_layout-sel_mode    = 'D'.
  gs_layout-cwidth_opt  = 'X'.

  gs_layout-info_fname  = 'COL'.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FIELD_CATALOG
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0179   text
*      -->P_0180   text
*      -->P_0181   text
*      -->P_0182   text
*----------------------------------------------------------------------*
FORM set_field_catalog  USING pv_key pv_fname pv_text pv_emphasize.
  "pk "Field name       "col text               "emphasize
  gs_fcat-key         = pv_key.
  gs_fcat-fieldname   = pv_fname.
  gs_fcat-coltext     = pv_text.
  gs_fcat-emphasize   = pv_emphasize.

  CASE pv_fname.
    WHEN 'DMBTR'.
      gs_fcat-cfieldname  = 'WAERS'.
    WHEN 'MBLNR'.
      gs_fcat-hotspot = 'X'.
  ENDCASE.

  APPEND gs_fcat TO gt_fcat.
  CLEAR  gs_fcat.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_OBJ
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_obj .

  CREATE OBJECT go_container
    EXPORTING
      repid     = sy-repid
      dynnr     = sy-dynnr
      side      = go_container->dock_at_left
      extension = 3000.

  CREATE OBJECT go_alv_grid
    EXPORTING
      i_parent = go_container.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DOUBLE_CLICK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_I_ROW  text
*      -->P_I_COLUMN  text
*----------------------------------------------------------------------*
FORM double_click  USING pv_row pv_column.

  MESSAGE i001(k5) WITH 'Row :' pv_row 'Column :' pv_column.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_SORT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_sort .

  CLEAR : gs_sort.

  gs_sort-fieldname = 'DMBTR'.
  gs_sort-spos      = 1.
  gs_sort-down      = 'X'.
  gs_sort-subtot    = 'X'.
  APPEND gs_sort TO gt_sort.
  CLEAR  gs_sort.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ON_HOTSPOT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_E_ROW_ID  text
*      -->P_E_COLUMN_ID  text
*----------------------------------------------------------------------*
FORM on_hotspot  USING    pv_row_id pv_column_id.

  CLEAR : gs_body.
  READ TABLE gt_body INTO gs_body INDEX pv_row_id.

  SET PARAMETER ID 'MBN' FIELD gs_body-mblnr.
  SET PARAMETER ID 'MJA' FIELD gs_body-mjahr.

  CALL TRANSACTION 'MB03' AND SKIP FIRST SCREEN.

ENDFORM.

----------------------------------------------------------------------------------
Extracted by Direct Download Enterprise version 1.3.1 - E.G.Mellodew. 1998-2005 UK. Sap Release 750
