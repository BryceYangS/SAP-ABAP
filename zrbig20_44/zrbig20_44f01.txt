*&---------------------------------------------------------------------*
*&  Include           ZRBIG20_44F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  SET_INIT_VALUE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_init_value .

  p_monat = sy-datum+4(2).

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SUM_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM sum_data .

  FIELD-SYMBOLS <lv_fs> TYPE ANY.

  DATA : lv_sum        TYPE ztbig00_02-mon01,
         lv_amount(13),
         lv_var(20),                          " For dynamic variable
         lv_mon(2) TYPE n.                    " Monthly

  DATA : ls_data TYPE ztbig00_02.


  SELECT SINGLE *
  INTO CORRESPONDING FIELDS OF ls_data
  FROM ztbig00_02.


*-- 반복횟수
  CLEAR : lv_mon, lv_sum.
  DO p_monat TIMES.

    lv_mon  = lv_mon + 1.

*-- Make variable
    CLEAR lv_var.
    CONCATENATE 'ls_data-mon' lv_mon INTO lv_var.

*-- Assign to Field symbols
    ASSIGN (lv_var) TO <lv_fs>.
    " lv_var만 입력하면 변수가 가지고 있는 값 자체를 할당 해주지는 않음.
    " (lv_var) 괄호 안에 넣는 순간 gs_data-mon과 lv_mon을 합한 그 값 자체가 된다.
    " 즉,     ASSIGN gs_data-mon?? TO <lv_fs>.  와 동일.

*-- ASSIGN 된 순간 <lv_fs>는 gs_data-monXX의 값을 갖게 된다.


    lv_sum = lv_sum + <lv_fs>.

  ENDDO.


*  CASE p_monat.
*    WHEN '1'.
*      lv_sum = ls_data-mon01.
*    WHEN '2'.
*      lv_sum = ls_data-mon01 + ls_data-mon02.
*    WHEN '3'.
*      lv_sum = ls_data-mon01 + ls_data-mon02 + ls_data-mon03.
*    WHEN '4'.
*      lv_sum = ls_data-mon01 + ls_data-mon02 + ls_data-mon03
*                + ls_data-mon04.
*    WHEN '5'.
*      lv_sum = ls_data-mon01 + ls_data-mon02 + ls_data-mon03
*              + ls_data-mon04 + ls_data-mon05.
*    WHEN '6'.
*      lv_sum = ls_data-mon01 + ls_data-mon02 + ls_data-mon03
*      + ls_data-mon04 + ls_data-mon05 + ls_data-mon06.
*    WHEN '7'.
*      lv_sum = ls_data-mon01 + ls_data-mon02 + ls_data-mon03
*      + ls_data-mon04 + ls_data-mon05 + ls_data-mon06 + ls_data-mon07.
*    WHEN '8'.
*      lv_sum = ls_data-mon01 + ls_data-mon02 + ls_data-mon03
*      + ls_data-mon04 + ls_data-mon05 + ls_data-mon06 + ls_data-mon07
*      + ls_data-mon08.
*    WHEN '9'.
*      lv_sum = ls_data-mon01 + ls_data-mon02 + ls_data-mon03
*      + ls_data-mon04 + ls_data-mon05 + ls_data-mon06 + ls_data-mon07
*      + ls_data-mon08 + ls_data-mon09.
*    WHEN '10'.
*      lv_sum = ls_data-mon01 + ls_data-mon02 + ls_data-mon03
*      + ls_data-mon04 + ls_data-mon05 + ls_data-mon06 + ls_data-mon07
*      + ls_data-mon08 + ls_data-mon09 + ls_data-mon10.
*    WHEN '11'.
*      lv_sum = ls_data-mon01 + ls_data-mon02 + ls_data-mon03
*      + ls_data-mon04 + ls_data-mon05 + ls_data-mon06 + ls_data-mon07
*      + ls_data-mon08 + ls_data-mon09 + ls_data-mon10 + ls_data-mon11.
*    WHEN OTHERS.
*      lv_sum = ls_data-mon01 + ls_data-mon02 + ls_data-mon03
*      + ls_data-mon04 + ls_data-mon05 + ls_data-mon06 + ls_data-mon07
*      + ls_data-mon08 + ls_data-mon09 + ls_data-mon10 + ls_data-mon11
*      + ls_data-mon12.
*  ENDCASE.

  WRITE lv_sum CURRENCY ls_data-waers TO lv_amount.
  CONDENSE lv_amount NO-GAPS.
  WRITE lv_amount.


ENDFORM.

----------------------------------------------------------------------------------
Extracted by Direct Download Enterprise version 1.3.1 - E.G.Mellodew. 1998-2005 UK. Sap Release 750
